{"file":"mt-floated.entry.cjs.js","mappings":";;;;AAAA,MAAM,UAAU,GAAG,yQAAyQ;;MCO/Q,OAAO,GAAA,MAAA;;;;;AAGV,IAAA,WAAW;AACX,IAAA,QAAQ;IAEhB,qBAAqB,CAAC,UAAU,EAAE,QAAQ,EAAA;AACxC,QAAA,IAAI,EAAE,UAAU,YAAY,gBAAgB,CAAC,EAAE;AAC7C,YAAA,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC;;QAGpD,IAAI,CAAC,QAAQ,GAAG,IAAI,gBAAgB,CAAC,SAAS,IAAG;AAC/C,YAAA,SAAS,CAAC,OAAO,CAAC,QAAQ,IAAG;AAC3B,gBAAA,IAAI,QAAQ,CAAC,IAAI,KAAK,YAAY,IAAI,QAAQ,CAAC,aAAa,KAAK,KAAK,EAAE;AACtE,oBAAA,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC;;AAE5B,aAAC,CAAC;AACJ,SAAC,CAAC;AAEF,QAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE;AAChC,YAAA,UAAU,EAAE,IAAI;YAChB,eAAe,EAAE,CAAC,KAAK,CAAC;AACzB,SAAA,CAAC;QAEF,OAAO,IAAI,CAAC,QAAQ;;IAGtB,gBAAgB,GAAA;AACd,QAAA,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAClE,YAAA,MAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;YAEpB,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC;AAE/C,YAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,2BAA2B,EAAE,CAAA,KAAA,EAAQ,UAAU,CAAA,EAAA,CAAI,CAAC;AAElF,YAAA,IAAI,CAAC,qBAAqB,CAAC,GAAG,EAAE,MAAM,IAAG;AACvC,gBAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,2BAA2B,EAAE,CAAA,KAAA,EAAQ,MAAM,CAAA,EAAA,CAAI,CAAC;AAChF,aAAC,CAAC;;;IAIN,oBAAoB,GAAA;AAClB,QAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;;IAG5B,MAAM,GAAA;AACJ,QAAA,QACEA,OAAC,CAAAC,UAAI,EAAC,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,YAAY,EAAA,EACtBD,OAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAM,IAAI,EAAC,OAAO,EAAC,GAAG,EAAE,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,EAAqB,CAAC,EAAS,CAAA,EACjFA,OAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAM,IAAI,EAAC,MAAM,EAAQ,CAAA,CACpB;;;;;;;","names":["h","Host"],"sources":["src/components/floated/floated.scss?tag=mt-floated&encapsulation=scoped","src/components/floated/floated.tsx"],"sourcesContent":["$mt-breakpoints: (\r\n  sm: 576px,\r\n  md: 768px,\r\n  lg: 992px,\r\n  xl: 1200px,\r\n  xxl: 1400px,\r\n);\r\n\r\n:host {\r\n  --mt-imagem-floated-margin: 0 0 30px 0;\r\n\r\n  display: block;\r\n\r\n  &::after {\r\n    content: '';\r\n    display: table; /* or block */\r\n    clear: both;\r\n  }\r\n}\r\n\r\n::slotted(img) {\r\n  shape-outside: var(--mt-imagem-floated-image);\r\n  float: right;\r\n  margin: var(--mt-imagem-floated-margin);\r\n  max-width: 100%;\r\n}\r\n","import { Component, h, Host, Element } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'mt-floated',\r\n  styleUrl: 'floated.scss',\r\n  scoped: true,\r\n})\r\nexport class Floated {\r\n  @Element() hostEl!: HTMLElement;\r\n\r\n  private titleSlotEl!: HTMLSlotElement;\r\n  private observer!: MutationObserver;\r\n\r\n  observeImageSrcChange(imgElement, callback) {\r\n    if (!(imgElement instanceof HTMLImageElement)) {\r\n      throw new Error('Target must be an <img> element');\r\n    }\r\n\r\n    this.observer = new MutationObserver(mutations => {\r\n      mutations.forEach(mutation => {\r\n        if (mutation.type === 'attributes' && mutation.attributeName === 'src') {\r\n          callback(imgElement.src);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.observer.observe(imgElement, {\r\n      attributes: true,\r\n      attributeFilter: ['src'],\r\n    });\r\n\r\n    return this.observer;\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (this.titleSlotEl) {\r\n      const nodes = this.titleSlotEl.assignedElements({ flatten: true });\r\n      const img = nodes[0];\r\n\r\n      const initialSrc = nodes[0].getAttribute('src');\r\n\r\n      this.hostEl.style.setProperty('--mt-imagem-floated-image', `url('${initialSrc}')`);\r\n\r\n      this.observeImageSrcChange(img, newSrc => {\r\n        this.hostEl.style.setProperty('--mt-imagem-floated-image', `url('${newSrc}')`);\r\n      });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.observer.disconnect();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"mt-floated\">\r\n        <slot name=\"image\" ref={el => (this.titleSlotEl = el as HTMLSlotElement)}></slot>\r\n        <slot name=\"text\"></slot>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}